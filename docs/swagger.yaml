basePath: /
definitions:
  dto.BookRequest:
    properties:
      author:
        type: string
      isbn:
        type: string
      publisher:
        type: string
      slug:
        type: string
      title:
        type: string
      total:
        type: integer
      year:
        type: integer
    type: object
  dto.LendingHistoryRequest:
    properties:
      book_id:
        type: integer
      end_date:
        type: string
      start_date:
        type: string
      status:
        type: string
      student_id:
        type: integer
    required:
    - book_id
    - end_date
    - start_date
    - status
    - student_id
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.RegisterRequest:
    properties:
      confirm_password:
        type: string
      date_of_birth:
        type: string
      gender:
        enum:
        - M
        - F
        type: string
      level:
        enum:
        - X
        - XI
        - XII
        type: string
      mother_name:
        type: string
      name:
        type: string
      nik:
        maxLength: 16
        type: string
      nisn:
        maxLength: 10
        minLength: 10
        type: string
      password:
        type: string
      place_of_birth:
        type: string
    required:
    - confirm_password
    - date_of_birth
    - gender
    - level
    - name
    - password
    - place_of_birth
    type: object
  dto.ResponseError:
    properties:
      code:
        type: string
      data:
        items:
          type: string
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.ResponseSuccess:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.StudentChangePasswordRequest:
    properties:
      confirmation_new_password:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    type: object
  dto.StudentUpdateProfileRequest:
    properties:
      date_of_birth:
        type: string
      gender:
        type: string
      level:
        type: string
      mother_name:
        type: string
      name:
        type: string
      nik:
        type: string
      nisn:
        type: string
      place_of_birth:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: REST API untuk manajemen buku dan user
  title: Library App API
  version: "1.0"
paths:
  /api/books:
    get:
      consumes:
      - application/json
      description: Ambil semua data buku
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Create data buku
      parameters:
      - description: Book payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BookRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create Book
      tags:
      - Books
  /api/books/{id}:
    delete:
      consumes:
      - application/json
      description: Hapus data buku
      parameters:
      - description: Book id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete Book
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update data buku
      parameters:
      - description: Book payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BookRequest'
      - description: Book id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update Book
      tags:
      - Books
  /api/lending-history:
    get:
      consumes:
      - application/json
      description: Lihat History Peminjaman
      parameters:
      - description: Filter berdasarkan ID siswa
        in: query
        name: student_id
        type: integer
      - description: Filter tanggal mulai
        in: query
        name: start_date
        type: string
      - description: Filter tanggal selesai
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get Lending History
      tags:
      - Lending History
    post:
      consumes:
      - application/json
      description: Tambah Data History Peminjaman
      parameters:
      - description: Landing History payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LendingHistoryRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Post Lending History
      tags:
      - Lending History
  /api/lending-history/{history_id}:
    put:
      consumes:
      - application/json
      description: Update Data History Peminjaman
      parameters:
      - description: ID Landing History
        in: path
        name: history_id
        required: true
        type: integer
      - description: Landing History payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LendingHistoryRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Put Lending History
      tags:
      - Lending History
  /api/login:
    post:
      consumes:
      - application/json
      description: Login Library App
      parameters:
      - description: Login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseError'
      summary: Post Login
      tags:
      - Auth
  /api/profile/{student_id}:
    get:
      consumes:
      - application/json
      description: Lihat Detail Profile Siswa
      parameters:
      - description: Student id
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get Student Profile
      tags:
      - Profile
    put:
      consumes:
      - application/json
      description: Update Student Profile
      parameters:
      - description: Student Request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.StudentUpdateProfileRequest'
      - description: Student id
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - Profile
  /api/profile/change-password/{student_id}:
    put:
      consumes:
      - application/json
      description: Update Student Profile
      parameters:
      - description: Student Change Password Request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.StudentChangePasswordRequest'
      - description: Student id
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - Profile
  /api/register:
    post:
      consumes:
      - application/json
      description: Logout Library App
      parameters:
      - description: Register payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseError'
      summary: Post Logout
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    description: 'Masukkan token Anda dengan format: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
