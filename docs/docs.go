// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admins": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ambil semua data admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Get all Admins",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Tambah data admin",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Create Admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nama Lengkap",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Konfirmasi Password",
                        "name": "confirmation_password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/admins/{admin_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update data admin",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Update Admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Admin",
                        "name": "admin_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nama Lengkap",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Konfirmasi Password",
                        "name": "confirmation_password",
                        "in": "formData"
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Hapus Data Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Delete Admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Admin",
                        "name": "admin_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/books": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ambil semua data buku",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get all books",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create data buku dengan upload cover",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Create Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Judul Buku",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Penerbit",
                        "name": "publisher",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Penulis",
                        "name": "author",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ISBN",
                        "name": "isbn",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tahun",
                        "name": "year",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Jumlah",
                        "name": "total",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Cover Buku",
                        "name": "cover",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/books/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update data buku",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Update Book",
                "parameters": [
                    {
                        "description": "Book payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BookRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Hapus data buku",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Delete Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ambil data dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get Dashboard Information",
                "responses": {}
            }
        },
        "/api/lending-history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lihat History Peminjaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lending History"
                ],
                "summary": "Get Lending History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter berdasarkan ID siswa",
                        "name": "student_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter tanggal mulai",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter tanggal selesai",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Tambah Data History Peminjaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lending History"
                ],
                "summary": "Post Lending History",
                "parameters": [
                    {
                        "description": "Landing History payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LendingHistoryRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/lending-history/{history_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perbarui Data History Peminjaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lending History"
                ],
                "summary": "Put Lending History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Landing History",
                        "name": "history_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Landing History payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LendingHistoryRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Hapus Data History Peminjaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lending History"
                ],
                "summary": "Delete Lending History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Landing History",
                        "name": "history_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/login": {
            "post": {
                "description": "Login Library App",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Post Login",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/profile/change-password/{student_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Student Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "Student Change Password Request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StudentChangePasswordRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Student id",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/profile/{student_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lihat Detail Profile Siswa",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get Student Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student id",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Student Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "Student Request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StudentUpdateProfileRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Student id",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/register": {
            "post": {
                "description": "Logout Library App",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Post Logout",
                "parameters": [
                    {
                        "description": "Register payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ambil semua data Student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get all students",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create data siswa dengan upload foto opsional",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NISN",
                        "name": "nisn",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NIK",
                        "name": "nik",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nama Lengkap",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Konfirmasi Password",
                        "name": "confirmation_password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tempat Lahir",
                        "name": "place_of_birth",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tanggal Lahir (YYYY-MM-DD)",
                        "name": "date_of_birth",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nama Ibu",
                        "name": "mother_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Jenis Kelamin (M/F)",
                        "name": "gender",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tingkat Kelas",
                        "name": "level",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/students/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update data siswa dengan upload foto opsional",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Student",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NISN",
                        "name": "nisn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "NIK",
                        "name": "nik",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Nama Lengkap",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Password (opsional)",
                        "name": "password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Konfirmasi Password",
                        "name": "confirmation_password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tempat Lahir",
                        "name": "place_of_birth",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tanggal Lahir (YYYY-MM-DD)",
                        "name": "date_of_birth",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Nama Ibu",
                        "name": "mother_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Jenis Kelamin (M/F)",
                        "name": "gender",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Tingkat Kelas",
                        "name": "level",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/students/{student_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Hapus Data Siswa",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete Student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Student",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "dto.BookRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "isbn": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dto.LendingHistoryRequest": {
            "type": "object",
            "required": [
                "book_id",
                "end_date",
                "start_date",
                "status",
                "student_id"
            ],
            "properties": {
                "book_id": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "student_id": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "date_of_birth",
                "gender",
                "level",
                "name",
                "password",
                "place_of_birth"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "M",
                        "F"
                    ]
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "X",
                        "XI",
                        "XII"
                    ]
                },
                "mother_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string",
                    "maxLength": 16
                },
                "nisn": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "password": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                }
            }
        },
        "dto.ResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.ResponseSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.StudentChangePasswordRequest": {
            "type": "object",
            "properties": {
                "confirmation_new_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "dto.StudentUpdateProfileRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "mother_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Masukkan token Anda dengan format: Bearer \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Library App API",
	Description:      "REST API untuk manajemen buku dan user",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
